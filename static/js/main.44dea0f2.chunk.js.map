{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addGood","good","setState","removeGood","filter","item","resetGoods","changedGoods","some","selectedGoodsForUser","length","slice","join","this","className","type","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,I,EAGjBC,QAAU,SAACC,GACT,EAAKC,UAAS,gBAAGH,EAAH,EAAGA,cAAH,MAAwB,CACpCA,cAAc,GAAD,mBAAMA,GAAN,CAAqBE,S,EAItCE,WAAa,SAACF,GACZ,EAAKC,UAAS,gBAAGH,EAAH,EAAGA,cAAH,MAAwB,CACpCA,cAAc,YAAKA,EAAcK,QAAO,SAAAC,GAAI,OAAIA,IAASJ,W,EAI7DK,WAAa,WACX,EAAKJ,SAAS,CACZH,cAAe,M,EAInBQ,aAAe,SAACN,GACV,EAAKH,MAAMC,cAAcS,MAAK,SAAAH,GAAI,OAAIA,IAASJ,KACjD,EAAKE,WAAWF,GAEhB,EAAKD,QAAQC,I,EAIjBQ,qBAAuB,WACrB,IAAQV,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcW,QACpB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUX,EAAc,GAAxB,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAc,GAAxB,gBAAkCA,EAAc,GAAhD,iBACF,QACE,MAAM,GAAN,OAAUA,EAAcY,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDb,EAAcY,OAAO,GAA5E,mB,4CAIN,WAAU,IAAD,OACCZ,EAAkBc,KAAKf,MAAvBC,cAER,OACE,sBAAKe,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAIA,UAAU,YAAd,UACE,iDACCD,KAAKJ,0BAER,wBACEM,KAAK,SACLD,UAAWf,EAAcW,OAAS,EAC9B,yBACA,iBACJM,QAAS,WACP,EAAKV,cANT,sBAYF,yBAASQ,UAAU,YAAnB,SACE,qBAAKA,UAAU,aAAf,SACGlB,EAAgBqB,KAAI,SAAAhB,GAAI,OACvB,qBAEEa,UAAS,oBAAef,EAAcS,MAAK,SAAAH,GAAI,OAAIA,IAASJ,KACxD,qBACA,aAJN,UAME,mBAAGa,UAAU,YAAb,SAA0Bb,IAC1B,wBACEc,KAAK,SACLD,UAAU,8BACVE,QAAS,WACP,EAAKT,aAAaN,IAJtB,SAOGF,EAAcS,MAAK,SAAAH,GAAI,OAAIA,IAASJ,KACjC,SACA,UAfDA,iB,GAxEHiB,IAAMC,WAkGTtB,ICnHfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.44dea0f2.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: [],\n  };\n\n  addGood = (good: string) => {\n    this.setState(({ selectedGoods }) => ({\n      selectedGoods: [...selectedGoods, good],\n    }));\n  };\n\n  removeGood = (good: string) => {\n    this.setState(({ selectedGoods }) => ({\n      selectedGoods: [...selectedGoods.filter(item => item !== good)],\n    }));\n  };\n\n  resetGoods = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  changedGoods = (good: string) => {\n    if (this.state.selectedGoods.some(item => item === good)) {\n      this.removeGood(good);\n    } else {\n      this.addGood(good);\n    }\n  };\n\n  selectedGoodsForUser = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n      case 2:\n        return `${selectedGoods[0]} and ${selectedGoods[1]} are selected`;\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods.slice(-1)} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__title\">\n          <h1 className=\"App__text\">\n            <b>Selected goods: </b>\n            {this.selectedGoodsForUser()}\n          </h1>\n          <button\n            type=\"button\"\n            className={selectedGoods.length < 1\n              ? 'App__button--reset-off'\n              : 'btn btn-danger'}\n            onClick={() => {\n              this.resetGoods();\n            }}\n          >\n            RESET\n          </button>\n        </div>\n        <section className=\"App__list\">\n          <div className=\"App__cards\">\n            {goodsFromServer.map(good => (\n              <li\n                key={good}\n                className={`App__card ${selectedGoods.some(item => item === good)\n                  ? 'App__card-selected'\n                  : 'App__card'}`}\n              >\n                <p className=\"App__text\">{good}</p>\n                <button\n                  type=\"button\"\n                  className=\"App__button btn btn-primary\"\n                  onClick={() => {\n                    this.changedGoods(good);\n                  }}\n                >\n                  {selectedGoods.some(item => item === good)\n                    ? 'REMOVE'\n                    : 'ADD'}\n                </button>\n              </li>\n            ))}\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}